//<editor-fold defaultstate="collapsed" desc="Jibberish">
package gui;

import components.TableListener;
import components.Language;
import components.enums.TestSpeed;
import components.enums.TestType;
import connections.DatabaseFile;
import connections.DatabaseMySQL;
import java.awt.Toolkit;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
//</editor-fold>

/**
 * In this class you can find all properties and operations for the Main Frame.
 *
 * @organization: Moridrin
 * @author J.B.A.J. Berkvens
 * @date 2014/04/14
 */
public class MainFrame extends javax.swing.JFrame {

    //<editor-fold defaultstate="collapsed" desc="Declarations">
    private Language language;
    private String oldCellValue;
    private int rowsToBeAdded = 1;
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Constructor">
    /**
     * Creates new form MainFrame and sets the language.
     */
    public MainFrame() {
        initComponents();
        this.setTitle("MP-Learning Words");
        ChangeListener listener = new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                rowsToBeAdded = Integer.parseInt(jSpinnerRows.getValue().toString());
            }
        };
        jSpinnerRows.addChangeListener(listener);
        jTable.getModel().addTableModelListener(TableListener.getInstance());
        jMenuFileNewActionPerformed(null);
        TableListener.setLanguage(language);
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Generated Code">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButtonAddRows = new javax.swing.JButton();
        jSpinnerRows = new javax.swing.JSpinner();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuFileNew = new javax.swing.JMenuItem();
        jMenuFileOpen = new javax.swing.JMenu();
        jMenuFileLoadDatabase = new javax.swing.JMenuItem();
        jMenuFileLoadFile = new javax.swing.JMenuItem();
        jMenuFileSave = new javax.swing.JMenu();
        jMenuDatabaseSave = new javax.swing.JMenuItem();
        jMenuFileSaveFile = new javax.swing.JMenuItem();
        jMenuFileImport = new javax.swing.JMenu();
        jMenuFileImportMySQL = new javax.swing.JMenuItem();
        jMenuFileImportFile = new javax.swing.JMenuItem();
        jMenuTest = new javax.swing.JMenu();
        jMenuTestFast = new javax.swing.JRadioButtonMenuItem();
        jMenuTestGood = new javax.swing.JRadioButtonMenuItem();
        jSeparatorMenuTestSpeedTipe = new javax.swing.JPopupMenu.Separator();
        jMenuTestBoth = new javax.swing.JMenuItem();
        jMenuTestMainToLanguage = new javax.swing.JMenuItem();
        jMenuTestLanguageToMain = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(MainFrame.class.getResource("main.png")));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Main", "Hint", "Language", "Hint"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);

        jButtonAddRows.setText("Add Row(s)");
        jButtonAddRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddRowsActionPerformed(evt);
            }
        });

        jSpinnerRows.setValue(1);

        jMenuFile.setText("File");

        jMenuFileNew.setText("New");
        jMenuFileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileNewActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuFileNew);

        jMenuFileOpen.setText("Open");

        jMenuFileLoadDatabase.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuFileLoadDatabase.setText("MySQL");
        jMenuFileLoadDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileLoadDatabaseActionPerformed(evt);
            }
        });
        jMenuFileOpen.add(jMenuFileLoadDatabase);

        jMenuFileLoadFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuFileLoadFile.setText("File");
        jMenuFileLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileLoadFileActionPerformed(evt);
            }
        });
        jMenuFileOpen.add(jMenuFileLoadFile);

        jMenuFile.add(jMenuFileOpen);

        jMenuFileSave.setText("Save");

        jMenuDatabaseSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuDatabaseSave.setText("MySQL");
        jMenuDatabaseSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuDatabaseSaveActionPerformed(evt);
            }
        });
        jMenuFileSave.add(jMenuDatabaseSave);

        jMenuFileSaveFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuFileSaveFile.setText("File");
        jMenuFileSave.add(jMenuFileSaveFile);

        jMenuFile.add(jMenuFileSave);

        jMenuFileImport.setText("Import");

        jMenuFileImportMySQL.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuFileImportMySQL.setText("MySQL");
        jMenuFileImport.add(jMenuFileImportMySQL);

        jMenuFileImportFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuFileImportFile.setText("File");
        jMenuFileImport.add(jMenuFileImportFile);

        jMenuFile.add(jMenuFileImport);

        jMenuBar1.add(jMenuFile);

        jMenuTest.setText("Test");

        jMenuTestFast.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuTestFast.setSelected(true);
        jMenuTestFast.setText("Fast");
        jMenuTestFast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTestFastActionPerformed(evt);
            }
        });
        jMenuTest.add(jMenuTestFast);

        jMenuTestGood.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuTestGood.setText("Good");
        jMenuTestGood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTestGoodActionPerformed(evt);
            }
        });
        jMenuTest.add(jMenuTestGood);
        jMenuTest.add(jSeparatorMenuTestSpeedTipe);

        jMenuTestBoth.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuTestBoth.setText("Both");
        jMenuTestBoth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTestBothActionPerformed(evt);
            }
        });
        jMenuTest.add(jMenuTestBoth);

        jMenuTestMainToLanguage.setText("Main To Language");
        jMenuTestMainToLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTestMainToLanguageActionPerformed(evt);
            }
        });
        jMenuTest.add(jMenuTestMainToLanguage);

        jMenuTestLanguageToMain.setText("Language To Main");
        jMenuTestLanguageToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTestLanguageToMainActionPerformed(evt);
            }
        });
        jMenuTest.add(jMenuTestLanguageToMain);

        jMenuBar1.add(jMenuTest);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSpinnerRows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddRows)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddRows)
                    .addComponent(jSpinnerRows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //</editor-fold>

    //<editor-fold desc="Operations">
    //<editor-fold defaultstate="collapsed" desc="setLanguage(language)">
    public void setLanguage(Language language) {
        this.language = language;
        updateTable();
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu File Open">
    /**
     * This event is called when the File>Open menu item is called. It loads a
     * file into the language component.
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuFileLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileLoadFileActionPerformed
        DatabaseFile.load(language, this);
        updateTable();
    }//GEN-LAST:event_jMenuFileLoadFileActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu Database Load">
    /**
     * This event is called when the Database>Load menu item is called. It loads
     * the database that fits the language.
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuFileLoadDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileLoadDatabaseActionPerformed
        DatabaseSelector databaseSelector = new DatabaseSelector(this, null);
        databaseSelector.setVisible(true);
    }//GEN-LAST:event_jMenuFileLoadDatabaseActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu Database Save">
    /**
     * This event is called when the Database>Save menu item is called. It saves
     * the current language in the database.
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuDatabaseSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuDatabaseSaveActionPerformed
        DatabaseSelector databaseSelector = new DatabaseSelector(this, language);
        databaseSelector.setVisible(true);
    }//GEN-LAST:event_jMenuDatabaseSaveActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu Test Fast">
    /**
     * This event is called when the Test>Fast menu item is called. It changes
     * the Test Type to "Fast".
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuTestFastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTestFastActionPerformed
        jMenuTestFast.setSelected(true);
        jMenuTestGood.setSelected(false);
    }//GEN-LAST:event_jMenuTestFastActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu Test Good">
    /**
     * This event is called when the Test>Good menu item is called. It changes
     * the Test Type to "Good"
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuTestGoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTestGoodActionPerformed
        jMenuTestGood.setSelected(true);
        jMenuTestFast.setSelected(false);
    }//GEN-LAST:event_jMenuTestGoodActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu Test Both">
    /**
     * This event is called when the File>Open menu item is called. It starts
     * the test with the given speed and in both directions.
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuTestBothActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTestBothActionPerformed
        if (jMenuTestFast.isSelected()) {
            TestFrame testFrame = new TestFrame(language, TestSpeed.Fast, TestType.Both);
            testFrame.setVisible(true);
        } else {
            TestFrame testFrame = new TestFrame(language, TestSpeed.Good, TestType.Both);
            testFrame.setVisible(true);
        }
    }//GEN-LAST:event_jMenuTestBothActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu Test Main to Language">
    /**
     * This event is called when the File>Open menu item is called. It starts
     * the test with the given speed and from the Main Language to the
     * translation.
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuTestMainToLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTestMainToLanguageActionPerformed
        // TODO add your handling code here:
        if (jMenuTestFast.isSelected()) {
            TestFrame testFrame = new TestFrame(language, TestSpeed.Fast, TestType.MainToLanguage);
            testFrame.setVisible(true);
        } else {
            TestFrame testFrame = new TestFrame(language, TestSpeed.Good, TestType.MainToLanguage);
            testFrame.setVisible(true);
        }
    }//GEN-LAST:event_jMenuTestMainToLanguageActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Menu Test Language to Main">
    /**
     * This event is called when the File>Open menu item is called. It starts
     * the test with the given speed and from the Translation to the Main
     * Language.
     *
     * @param evt is the event with which this event is called.
     */
    private void jMenuTestLanguageToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTestLanguageToMainActionPerformed
        if (jMenuTestFast.isSelected()) {
            TestFrame testFrame = new TestFrame(language, TestSpeed.Fast, TestType.LanguageToMain);
            testFrame.setVisible(true);
        } else {
            TestFrame testFrame = new TestFrame(language, TestSpeed.Good, TestType.LanguageToMain);
            testFrame.setVisible(true);
        }
    }//GEN-LAST:event_jMenuTestLanguageToMainActionPerformed

    private void jButtonAddRowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddRowsActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jTable.getModel();
        for (int i = 0; i < rowsToBeAdded; i++) {
            Object[] row = new Object[4];
            tableModel.addRow(row);
            jTable.setModel(tableModel);
        }
        TableListener.addRows(rowsToBeAdded);
    }//GEN-LAST:event_jButtonAddRowsActionPerformed

    private void jMenuFileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileNewActionPerformed
        language = new Language("new");
        updateTable();
    }//GEN-LAST:event_jMenuFileNewActionPerformed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Static Main">
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame mainFrame = new MainFrame();
                java.net.URL url = ClassLoader.getSystemResource("icons/main.png");
                mainFrame.setIconImage(Toolkit.getDefaultToolkit().getImage(url));
                mainFrame.setVisible(true);
            }
        });
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Generated Variables">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddRows;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuDatabaseSave;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuFileImport;
    private javax.swing.JMenuItem jMenuFileImportFile;
    private javax.swing.JMenuItem jMenuFileImportMySQL;
    private javax.swing.JMenuItem jMenuFileLoadDatabase;
    private javax.swing.JMenuItem jMenuFileLoadFile;
    private javax.swing.JMenuItem jMenuFileNew;
    private javax.swing.JMenu jMenuFileOpen;
    private javax.swing.JMenu jMenuFileSave;
    private javax.swing.JMenuItem jMenuFileSaveFile;
    private javax.swing.JMenu jMenuTest;
    private javax.swing.JMenuItem jMenuTestBoth;
    private javax.swing.JRadioButtonMenuItem jMenuTestFast;
    private javax.swing.JRadioButtonMenuItem jMenuTestGood;
    private javax.swing.JMenuItem jMenuTestLanguageToMain;
    private javax.swing.JMenuItem jMenuTestMainToLanguage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparatorMenuTestSpeedTipe;
    private javax.swing.JSpinner jSpinnerRows;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Update Table">
    /**
     * This operation updates the Table.
     */
    private void updateTable() {
        DefaultTableModel tableModel = (DefaultTableModel) jTable.getModel();
        for (int i = 0; i < language.getMainWords().size(); i++) {
            Object[] row = new Object[4];
            row[0] = language.getMainWords().get(i);
            row[1] = language.getMainHint(language.getMainWords().get(i));
            row[2] = language.getLanguageWords().get(i);
            row[3] = language.getLanguageHint(language.getLanguageWords().get(i));
            tableModel.addRow(row);
        }
        jTable.setModel(tableModel);
        TableListener.saveTableModel(tableModel);
    }
    //</editor-fold>
    //</editor-fold>
}
